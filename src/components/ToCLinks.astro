---
import type { MarkdownHeading } from "astro";

export type Props = {
  headings: MarkdownHeading[];
  depth?: number;
};

const { headings, depth = 2 } = Astro.props;

const topLevel = headings.filter((heading) => heading.depth === depth);
---

<ul
  class="flex flex-col gap-1 pl-4 border-l ml-0 mt-2 border-color"
>
  {
    topLevel.map((heading, i) => {
      const topLevelHeading = topLevel[i + 1];

      const sliceStart = headings.indexOf(heading) + 1;
      const sliceEnd = topLevelHeading ? headings.indexOf(topLevelHeading) : 0;

      const subHeadings = headings.slice(
        sliceStart,
        sliceEnd > 0 ? sliceEnd : undefined
      );

      return (
        <li>
          <a
            class:list={[
              "toc-link",
              `depth-${heading.depth}`,
            ]}
            href={`#${heading.slug.replace("h-", "")}`}
          >
            {heading.text}
          </a>

          {subHeadings.length > 0 && (
            <Astro.self headings={subHeadings} depth={heading.depth + 1} />
          )}
        </li>
      );
    })
  }
</ul>
