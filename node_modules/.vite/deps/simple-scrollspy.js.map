{
  "version": 3,
  "sources": ["../../simple-scrollspy/src/scrollspy.ts", "../../simple-scrollspy/src/index.ts"],
  "sourcesContent": ["export type MenuElement = string | HTMLElement;\nexport type SmoothScroll = boolean | ScrollIntoViewOptions;\n\nexport type Options = {\n  sectionClass: string;\n  menuActiveTarget: string;\n  offset: number;\n  hrefAttribute: string;\n  activeClass: string;\n  scrollContainer: string | HTMLElement;\n  smoothScroll: SmoothScroll;\n  smoothScrollBehavior?: (\n    targetElement: HTMLElement,\n    smoothScrollOptions: SmoothScroll\n  ) => void;\n  onActive?: (activeItem: HTMLElement) => void;\n};\n\nexport class ScrollSpy {\n  public menuList: HTMLElement | null;\n  public options: Options;\n  public scroller: HTMLElement | Window | null;\n  public sections: NodeListOf<HTMLElement>;\n\n  protected activeItem: HTMLElement | null = null;\n\n  constructor(menu: MenuElement, options: Partial<Options> = {}) {\n    if (!menu) {\n      throw new Error(\"Your navigation query selector is the first argument.\");\n    }\n\n    if (typeof options !== \"object\") {\n      throw new Error(\"The second argument must be an instance of an Object.\");\n    }\n\n    let defaultOptions = {\n      sectionClass: \".scrollspy\",\n      menuActiveTarget: \"li > a\",\n      offset: 0,\n      hrefAttribute: \"href\",\n      activeClass: \"active\",\n      scrollContainer: \"\",\n      smoothScroll: {},\n    };\n\n    options.smoothScroll =\n      (options.smoothScroll === true && {}) || options.smoothScroll;\n\n    this.menuList =\n      menu instanceof HTMLElement ? menu : document.querySelector(menu);\n    this.options = Object.assign({}, defaultOptions, options);\n\n    if (this.options.scrollContainer) {\n      this.scroller =\n        this.options.scrollContainer instanceof HTMLElement\n          ? this.options.scrollContainer\n          : document.querySelector<HTMLElement>(this.options.scrollContainer);\n    } else {\n      this.scroller = window;\n    }\n\n    this.sections = document.querySelectorAll<HTMLElement>(\n      this.options.sectionClass\n    );\n\n    this.attachEventListeners();\n  }\n\n  attachEventListeners() {\n    if (this.scroller) {\n      this.scroller.addEventListener(\"scroll\", () => this.onScroll());\n\n      // smooth scroll\n      if (this.options.smoothScroll && this.menuList) {\n        const menuItems = this.menuList.querySelectorAll<HTMLElement>(\n          this.options.menuActiveTarget\n        );\n        menuItems.forEach((item) =>\n          item.addEventListener(\"click\", this.onClick.bind(this))\n        );\n      }\n    }\n  }\n\n  onClick(event: MouseEvent) {\n    if (event.target) {\n      const targetSelector = (event.target as HTMLElement).getAttribute(\n        this.options.hrefAttribute\n      );\n      if (targetSelector) {\n        const targetElement =\n          document.querySelector<HTMLElement>(targetSelector);\n\n        if (targetElement && this.options.smoothScroll) {\n          // prevent click event\n          event.preventDefault();\n          // handle smooth scrolling to 'targetElement'\n          this.scrollTo(targetElement);\n        }\n      }\n    }\n  }\n\n  onScroll() {\n    const section = this.getSectionInView();\n    const menuItem = this.getMenuItemBySection(section);\n\n    if (!section || !menuItem) {\n      return;\n    }\n\n    const nextItemId = menuItem?.getAttribute(this.options.hrefAttribute);\n    const currentItemId = this.activeItem?.getAttribute(\n      this.options.hrefAttribute\n    );\n\n    if (menuItem && nextItemId && nextItemId !== currentItemId) {\n      this.removeCurrentActive({ ignore: menuItem });\n      this.setActive(menuItem);\n    }\n  }\n\n  scrollTo(targetElement: HTMLElement) {\n    const smoothScrollBehavior =\n      typeof this.options.smoothScrollBehavior === \"function\" &&\n      this.options.smoothScrollBehavior;\n\n    if (smoothScrollBehavior) {\n      smoothScrollBehavior(targetElement, this.options.smoothScroll);\n    } else {\n      targetElement.scrollIntoView({\n        ...(this.options.smoothScroll === true\n          ? {}\n          : this.options.smoothScroll),\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  getMenuItemBySection(section?: HTMLElement) {\n    if (!section || !this.menuList) return;\n    const sectionId = section.getAttribute(\"id\");\n    return this.menuList.querySelector<HTMLElement>(\n      `[${this.options.hrefAttribute}=\"#${sectionId}\"]`\n    );\n  }\n\n  getSectionInView() {\n    for (let i = 0; i < this.sections.length; i++) {\n      const startAt = this.sections[i]!.offsetTop;\n      const endAt = startAt + this.sections[i]!.offsetHeight;\n      let currentPosition =\n        (document.documentElement.scrollTop || document.body.scrollTop) +\n        this.options.offset;\n\n      if (this.options.scrollContainer && this.scroller) {\n        const scrollTop =\n          this.scroller instanceof Window\n            ? this.scroller.scrollY\n            : this.scroller.scrollTop;\n        currentPosition = scrollTop + this.options.offset;\n      }\n\n      const isInView = currentPosition > startAt && currentPosition <= endAt;\n      if (isInView) return this.sections[i];\n    }\n  }\n\n  setActive(menuItem: HTMLElement) {\n    this.activeItem = menuItem;\n    const isActive = this.activeItem.classList.contains(\n      this.options.activeClass\n    );\n    if (!isActive) {\n      this.activeItem.classList.add(this.options.activeClass);\n      if (typeof this.options.onActive === \"function\") {\n        this.options.onActive(this.activeItem);\n      }\n    }\n  }\n\n  removeCurrentActive({ ignore }: { ignore?: HTMLElement } = {}) {\n    if (this.activeItem) {\n      this.activeItem.classList.remove(this.options.activeClass);\n      this.activeItem = null;\n    } else if (this.menuList) {\n      const { hrefAttribute, menuActiveTarget, activeClass } = this.options;\n      const itemSelector = ignore\n        ? `${menuActiveTarget}.${activeClass}:not([${hrefAttribute}=\"${ignore.getAttribute(\n            hrefAttribute\n          )}\"])`\n        : `${menuActiveTarget}.${activeClass}`;\n\n      this.menuList\n        .querySelectorAll(itemSelector)\n        .forEach((item) => item.classList.remove(this.options.activeClass));\n    }\n  }\n}\n", "import { ScrollSpy, type MenuElement, type Options } from './scrollspy'\n\nconst scrollSpy = (el: MenuElement, options: Partial<Options> = {}) => {\n  const instance = new ScrollSpy(el, options)\n\n  instance.onScroll()\n\n  window.addEventListener('scroll', () => instance.onScroll())\n\n  return instance\n}\n\nexport type {\n  MenuElement,\n  Options,\n  ScrollSpy\n};\n\nexport default scrollSpy;\n\n"],
  "mappings": "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",
  "names": []
}
