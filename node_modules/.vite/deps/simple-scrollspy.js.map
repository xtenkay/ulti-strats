{
  "version": 3,
  "sources": ["../../simple-scrollspy/src/scrollspy.ts", "../../simple-scrollspy/src/index.ts"],
  "sourcesContent": ["export type MenuElement = string | HTMLElement;\r\nexport type SmoothScroll = boolean | ScrollIntoViewOptions;\r\n\r\nexport type Options = {\r\n  sectionClass: string;\r\n  menuActiveTarget: string;\r\n  offset: number;\r\n  hrefAttribute: string;\r\n  activeClass: string;\r\n  scrollContainer: string | HTMLElement;\r\n  smoothScroll: SmoothScroll;\r\n  smoothScrollBehavior?: (\r\n    targetElement: HTMLElement,\r\n    smoothScrollOptions: SmoothScroll\r\n  ) => void;\r\n  onActive?: (activeItem: HTMLElement) => void;\r\n};\r\n\r\nexport class ScrollSpy {\r\n  public menuList: HTMLElement | null;\r\n  public options: Options;\r\n  public scroller: HTMLElement | Window | null;\r\n  public sections: NodeListOf<HTMLElement>;\r\n\r\n  protected activeItem: HTMLElement | null = null;\r\n\r\n  constructor(menu: MenuElement, options: Partial<Options> = {}) {\r\n    if (!menu) {\r\n      throw new Error(\"Your navigation query selector is the first argument.\");\r\n    }\r\n\r\n    if (typeof options !== \"object\") {\r\n      throw new Error(\"The second argument must be an instance of an Object.\");\r\n    }\r\n\r\n    let defaultOptions = {\r\n      sectionClass: \".scrollspy\",\r\n      menuActiveTarget: \"li > a\",\r\n      offset: 0,\r\n      hrefAttribute: \"href\",\r\n      activeClass: \"active\",\r\n      scrollContainer: \"\",\r\n      smoothScroll: {},\r\n    };\r\n\r\n    options.smoothScroll =\r\n      (options.smoothScroll === true && {}) || options.smoothScroll;\r\n\r\n    this.menuList =\r\n      menu instanceof HTMLElement ? menu : document.querySelector(menu);\r\n    this.options = Object.assign({}, defaultOptions, options);\r\n\r\n    if (this.options.scrollContainer) {\r\n      this.scroller =\r\n        this.options.scrollContainer instanceof HTMLElement\r\n          ? this.options.scrollContainer\r\n          : document.querySelector<HTMLElement>(this.options.scrollContainer);\r\n    } else {\r\n      this.scroller = window;\r\n    }\r\n\r\n    this.sections = document.querySelectorAll<HTMLElement>(\r\n      this.options.sectionClass\r\n    );\r\n\r\n    this.attachEventListeners();\r\n  }\r\n\r\n  attachEventListeners() {\r\n    if (this.scroller) {\r\n      this.scroller.addEventListener(\"scroll\", () => this.onScroll());\r\n\r\n      // smooth scroll\r\n      if (this.options.smoothScroll && this.menuList) {\r\n        const menuItems = this.menuList.querySelectorAll<HTMLElement>(\r\n          this.options.menuActiveTarget\r\n        );\r\n        menuItems.forEach((item) =>\r\n          item.addEventListener(\"click\", this.onClick.bind(this))\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  onClick(event: MouseEvent) {\r\n    if (event.target) {\r\n      const targetSelector = (event.target as HTMLElement).getAttribute(\r\n        this.options.hrefAttribute\r\n      );\r\n      if (targetSelector) {\r\n        const targetElement =\r\n          document.querySelector<HTMLElement>(targetSelector);\r\n\r\n        if (targetElement && this.options.smoothScroll) {\r\n          // prevent click event\r\n          event.preventDefault();\r\n          // handle smooth scrolling to 'targetElement'\r\n          this.scrollTo(targetElement);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onScroll() {\r\n    const section = this.getSectionInView();\r\n    const menuItem = this.getMenuItemBySection(section);\r\n\r\n    if (!section || !menuItem) {\r\n      return;\r\n    }\r\n\r\n    const nextItemId = menuItem?.getAttribute(this.options.hrefAttribute);\r\n    const currentItemId = this.activeItem?.getAttribute(\r\n      this.options.hrefAttribute\r\n    );\r\n\r\n    if (menuItem && nextItemId && nextItemId !== currentItemId) {\r\n      this.removeCurrentActive({ ignore: menuItem });\r\n      this.setActive(menuItem);\r\n    }\r\n  }\r\n\r\n  scrollTo(targetElement: HTMLElement) {\r\n    const smoothScrollBehavior =\r\n      typeof this.options.smoothScrollBehavior === \"function\" &&\r\n      this.options.smoothScrollBehavior;\r\n\r\n    if (smoothScrollBehavior) {\r\n      smoothScrollBehavior(targetElement, this.options.smoothScroll);\r\n    } else {\r\n      targetElement.scrollIntoView({\r\n        ...(this.options.smoothScroll === true\r\n          ? {}\r\n          : this.options.smoothScroll),\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  }\r\n\r\n  getMenuItemBySection(section?: HTMLElement) {\r\n    if (!section || !this.menuList) return;\r\n    const sectionId = section.getAttribute(\"id\");\r\n    return this.menuList.querySelector<HTMLElement>(\r\n      `[${this.options.hrefAttribute}=\"#${sectionId}\"]`\r\n    );\r\n  }\r\n\r\n  getSectionInView() {\r\n    for (let i = 0; i < this.sections.length; i++) {\r\n      const startAt = this.sections[i]!.offsetTop;\r\n      const endAt = startAt + this.sections[i]!.offsetHeight;\r\n      let currentPosition =\r\n        (document.documentElement.scrollTop || document.body.scrollTop) +\r\n        this.options.offset;\r\n\r\n      if (this.options.scrollContainer && this.scroller) {\r\n        const scrollTop =\r\n          this.scroller instanceof Window\r\n            ? this.scroller.scrollY\r\n            : this.scroller.scrollTop;\r\n        currentPosition = scrollTop + this.options.offset;\r\n      }\r\n\r\n      const isInView = currentPosition > startAt && currentPosition <= endAt;\r\n      if (isInView) return this.sections[i];\r\n    }\r\n  }\r\n\r\n  setActive(menuItem: HTMLElement) {\r\n    this.activeItem = menuItem;\r\n    const isActive = this.activeItem.classList.contains(\r\n      this.options.activeClass\r\n    );\r\n    if (!isActive) {\r\n      this.activeItem.classList.add(this.options.activeClass);\r\n      if (typeof this.options.onActive === \"function\") {\r\n        this.options.onActive(this.activeItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  removeCurrentActive({ ignore }: { ignore?: HTMLElement } = {}) {\r\n    if (this.activeItem) {\r\n      this.activeItem.classList.remove(this.options.activeClass);\r\n      this.activeItem = null;\r\n    } else if (this.menuList) {\r\n      const { hrefAttribute, menuActiveTarget, activeClass } = this.options;\r\n      const itemSelector = ignore\r\n        ? `${menuActiveTarget}.${activeClass}:not([${hrefAttribute}=\"${ignore.getAttribute(\r\n            hrefAttribute\r\n          )}\"])`\r\n        : `${menuActiveTarget}.${activeClass}`;\r\n\r\n      this.menuList\r\n        .querySelectorAll(itemSelector)\r\n        .forEach((item) => item.classList.remove(this.options.activeClass));\r\n    }\r\n  }\r\n}\r\n", "import { ScrollSpy, type MenuElement, type Options } from './scrollspy'\r\n\r\nconst scrollSpy = (el: MenuElement, options: Partial<Options> = {}) => {\r\n  const instance = new ScrollSpy(el, options)\r\n\r\n  instance.onScroll()\r\n\r\n  window.addEventListener('scroll', () => instance.onScroll())\r\n\r\n  return instance\r\n}\r\n\r\nexport type {\r\n  MenuElement,\r\n  Options,\r\n  ScrollSpy\r\n};\r\n\r\nexport default scrollSpy;\r\n\r\n"],
  "mappings": "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",
  "names": []
}
